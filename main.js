(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,a,u,c,s,l,p){var f=c.handleCardClick,h=p.confirmRemoving;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._cardText=e,this._cardUrl=n,this._cardSelector=r,this._likesCounter=o,this.handleCardClick=f,this.setLikes=s,this.deleteLikes=l,this.confirmRemoving=h,this._cardOwner=i._id,this._cardID=a,this._userID=u,this._data=this._cardID}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){var e=this;return this._element=this._getTemplate(),this.likeButton=this._element.querySelector(".element__like-button"),this.removeButton=this._element.querySelector(".element__remove-button"),this._cardImage=this._element.querySelector(".element__photo"),this._element.querySelector(".element__text").textContent=this._cardText,this._cardImage.src=this._cardUrl,this._cardImage.alt=this._cardText,this.likeCounter=this._element.querySelector(".element__like-counter"),this.likeCounter.textContent=this._likesCounter.length,this._likesCounter.some((function(t){return t._id===e._userID}))&&this.likeButton.classList.add("element__like-button_active"),this._cardOwner!==this._userID&&this.removeButton.remove(),this._setEventListeners(),this._element}},{key:"_setEventListeners",value:function(){var e=this;this.likeButton.addEventListener("click",(function(){e.likeButton.classList.contains("element__like-button_active")?(e.likeButton.classList.remove("element__like-button_active"),e.deleteLikes(e._cardID)):(e.likeButton.classList.add("element__like-button_active"),e.setLikes(e._cardID))})),this.removeButton.addEventListener("click",(function(){e.confirmRemoving(e._data,e._element)})),this._cardImage.addEventListener("click",(function(){e.handleCardClick(e._element)}))}},{key:"setLikesCounter",value:function(e){this._item=e.likes,this._likesCounterRenew=this._item,this.likeCounter.textContent=this._likesCounterRenew.length}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupSelector=t,this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,r;return t=e,(r=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleClickClose",value:function(e){e.target.classList.contains("popup")&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close-button").addEventListener("click",this.close.bind(this)),this._popup.addEventListener("mousedown",(function(t){e._handleClickClose(t)}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(){return a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=u(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},a.apply(this,arguments)}function u(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=l(e)););return e}function c(e,t){return c=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},c(e,t)}function s(e,t){if(t&&("object"===o(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function l(e){return l=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},l(e)}var p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&c(e,t)}(p,e);var t,n,r,o,u=(r=p,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=l(r);if(o){var n=l(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return s(this,e)});function p(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),(n=u.call(this,e))._handleConfirm=t,n._popupForm=n._popup.querySelector(".popup__form-container"),n._saveButton=n._popup.querySelector(".popup__save-button"),n._initialText=n._saveButton.textContent,n}return t=p,(n=[{key:"setEventListeners",value:function(){var e=this;a(l(p.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._handleConfirm(e.data,e._element)}))}},{key:"open",value:function(e,t){this.data=e,this._element=t,a(l(p.prototype),"open",this).call(this)}},{key:"renderLoading",value:function(e){this._saveButton.textContent=e?"Сохранение...":this._initialText}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),p}(r);function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var h=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=n,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputErrorBorder=t.inputErrorBorder}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,e.classList.add(this._inputErrorBorder),t.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),e.classList.remove(this._inputErrorBorder),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var d=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItem",value:function(e){var t=this;this._items=e,this._items.forEach((function(e){t.renderer(e)}))}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=b(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},m.apply(this,arguments)}function b(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function k(e,t){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},k(e,t)}function g(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popup=document.querySelector(t._popupSelector),t._image=t._popup.querySelector(".popup__image"),t._popupText=t._popup.querySelector(".popup__image-text"),t}return t=a,(n=[{key:"open",value:function(e,t){m(w(a.prototype),"open",this).call(this),this._name=e.textContent,this._link=t.src,this._popupText.textContent=this._name,this._image.src=this._link,this._image.alt=this._name}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(r);function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function O(){return O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=L(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},O.apply(this,arguments)}function L(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}function j(e,t){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},j(e,t)}function P(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function a(e,t){var n,r=t.callback;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._popup=document.querySelector(n._popupSelector),n._callback=r,n._inputSelector=".popup__input",n._popupForm=n._popup.querySelector(".popup__form-container"),n._inputList=n._popup.querySelectorAll(n._inputSelector),n._saveButton=n._popup.querySelector(".popup__save-button"),n._initialText=n._saveButton.textContent,n}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;O(I(a.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){e._callback(t)}))}},{key:"getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"close",value:function(){O(I(a.prototype),"close",this).call(this),this._popupForm.reset()}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"renderLoading",value:function(e){this._saveButton.textContent=e?"Сохранение...":this._initialText}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(r);function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var q=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=document.querySelector(t.name),this._profileData=document.querySelector(t.about)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._userInformation={name:this._profileName.textContent,about:this._profileData.textContent},this._userInformation}},{key:"setUserInfo",value:function(e){this._name=e.name,this._about=e.about,this._profileName.textContent=this._name,this._profileData.textContent=this._about}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var x,z=function(){function e(t){var n=t.bazeUrl,r=t.authorization;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._bazeUrl=n,this._authorization=r}var t,n;return t=e,(n=[{key:"_handleResult",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._bazeUrl,"/cards"),{headers:{authorization:this._authorization}}).then(this._handleResult)}},{key:"getProfileInfo",value:function(){return fetch("".concat(this._bazeUrl,"/users/me"),{headers:{authorization:this._authorization}}).then(this._handleResult)}},{key:"editUserInfo",value:function(e){return fetch("".concat(this._bazeUrl,"/users/me"),{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,about:e.about})})}},{key:"postNewCard",value:function(e){return fetch("".concat(this._bazeUrl,"/cards"),{method:"POST",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link})}).then(this._handleResult)}},{key:"removeCard",value:function(e){return fetch("".concat(this._bazeUrl,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this._authorization}}).then(this._handleResult)}},{key:"likeCard",value:function(e){return fetch("".concat(this._bazeUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:{authorization:this._authorization}}).then(this._handleResult)}},{key:"dislikeCard",value:function(e){return fetch("".concat(this._bazeUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:{authorization:this._authorization}}).then(this._handleResult)}},{key:"changeAvatar",value:function(e){return fetch("".concat(this._bazeUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then(this._handleResult)}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),D={formSelector:".popup__form-container",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error",inputErrorBorder:"popup__input-border"},U=document.querySelector(".profile__edit-button"),V=document.querySelector(".profile__add-button"),A=document.querySelector(".popup__mesto-form-container"),N=document.querySelector(".popup__avatar-form-container"),F=document.querySelector(".popup__profile-form-container"),J=document.querySelector(".popup_photo"),H=(J.querySelector(".popup__image"),J.querySelector(".popup__image-text"),document.querySelector(".profile__avatar")),M=document.querySelector(".popup__input-avatar");function $(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}document.querySelector(".popup__remove-save-button"),document.querySelector(".popup__remove-form-container");var G=new z({bazeUrl:"https://mesto.nomoreparties.co/v1/cohort-47",authorization:"4d56a1ba-b22b-45b6-8032-4887d49b9594"}),K=new q({name:".profile__username",about:".profile__status"}),Q=new C(".popup_photo");function W(e){var n=new t(e.name,e.link,".template-element",e.likes,e.owner,e._id,x,{handleCardClick:ee},(function(){G.likeCard(e._id).then((function(e){n.setLikesCounter(e)})).catch((function(e){console.log(e)}))}),(function(){G.dislikeCard(e._id).then((function(e){n.setLikesCounter(e)})).catch((function(e){console.log(e)}))}),{confirmRemoving:Z});return n.generateCard()}Q.setEventListeners();var X=new d({renderer:function(e){var t=W(e);X.addItem(t)}},".elements");Promise.all([G.getProfileInfo(),G.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return $(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?$(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];x=o._id,K.setUserInfo(o),H.src=o.avatar,M.value=o.avatar,X.renderItem(i.reverse())})).catch((function(e){return console.log(e)}));var Y=new p(".popup_remove",(function(e,t){Y.renderLoading(!0),G.removeCard(e),t.remove(),Y.renderLoading(!1),Y.close()}));function Z(e,t){Y.open(e,t)}function ee(e){var t=e.querySelector(".element__text"),n=e.querySelector(".element__photo");Q.open(t,n)}Y.setEventListeners();var te=new B(".popup_profile",{callback:function(e){e.preventDefault();var t=te.getInputValues();G.editUserInfo(t),K.setUserInfo(t),te.close()}}),ne=new B(".popup_avatar",{callback:function(e){e.preventDefault(),ne.renderLoading(!0);var t=ne.getInputValues();H.src=t.avatar,G.changeAvatar(t.avatar),ne.renderLoading(!1),ne.close()}});ne.setEventListeners();var re=new B(".popup_mesto",{callback:function(e){var t;e.preventDefault(),re.renderLoading(!0),t=re.getInputValues(),G.postNewCard(t).then((function(e){var t=W(e);X.addItem(t)})).catch((function(e){console.log(e)})),re.renderLoading(!1),re.close()}});re.setEventListeners(),H.addEventListener("click",(function(){ne.open(),M.value=H.src,ae.resetValidation()})),te.setEventListeners(),U.addEventListener("click",(function(){te.open();var e=K.getUserInfo();te.setInputValues(e),oe.resetValidation()})),V.addEventListener("click",(function(){re.open(),ie.resetValidation()}));var oe=new h(D,F),ie=new h(D,A),ae=new h(D,N);oe.enableValidation(),ie.enableValidation(),ae.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,